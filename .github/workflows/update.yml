name: "Update"
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
jobs:
  sync-binaries:
    name: Sync upstream binaries
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up github-actions name and email
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions[bot]@users.noreply.github.com"
    - name: Checkout release branch
      run: |
        git fetch --depth=1 origin mirror/binaries:mirror/binaries || true
        git symbolic-ref HEAD refs/heads/mirror/binaries
        git reset --hard
    - name: Download binaries from https://lmtx.pragma-ade.nl/
      run: |
        # aarch64-linux, from "texmf-linux-aarch64"
        mkdir -p aarch64-linux
        curl -so aarch64-linux/luametatex https://lmtx.pragma-ade.nl/install-lmtx/tex/texmf-linux-aarch64/bin/luametatex &
        curl -so aarch64-linux/luatex https://lmtx.pragma-ade.nl/install-lmtx/tex/texmf-linux-aarch64/bin/luatex &

        # aarch64-darwin, from "texmf-osx-arm64"
        mkdir -p aarch64-darwin
        curl -so aarch64-darwin/luametatex https://lmtx.pragma-ade.nl/install-lmtx/tex/texmf-osx-arm64/bin/luametatex &
        curl -so aarch64-darwin/luatex https://lmtx.pragma-ade.nl/install-lmtx/tex/texmf-osx-arm64/bin/luatex &

        # i686-linux, from "texmf-linux"
        mkdir -p i686-linux
        curl -so i686-linux/luametatex https://lmtx.pragma-ade.nl/install-lmtx/tex/texmf-linux/bin/luametatex &
        curl -so i686-linux/luatex https://lmtx.pragma-ade.nl/install-lmtx/tex/texmf-linux/bin/luatex &

        # x86_64-darwin, from "texmf-osx-64"
        mkdir -p x86_64-darwin
        curl -so x86_64-darwin/luametatex https://lmtx.pragma-ade.nl/install-lmtx/tex/texmf-osx-64/bin/luametatex &
        curl -so x86_64-darwin/luatex https://lmtx.pragma-ade.nl/install-lmtx/tex/texmf-osx-64/bin/luatex &

        # x86_64-linux, from "texmf-linux-64"
        mkdir -p x86_64-linux
        curl -so x86_64-linux/luametatex https://lmtx.pragma-ade.nl/install-lmtx/tex/texmf-linux-64/bin/luametatex &
        curl -so x86_64-linux/luatex https://lmtx.pragma-ade.nl/install-lmtx/tex/texmf-linux-64/bin/luatex &

        # wait for all downloads to finish
        wait
    - name: Commit and push if changes present
      run: |
        if [ -z "$(git status --porcelain)" ]; then
          echo "No changes present."
        else
          echo "Changes present."
          git add aarch64-linux aarch64-darwin i686-linux x86_64-darwin x86_64-linux
          git commit --allow-empty-message -m ""
          git push origin mirror/binaries
        fi
  sync-modules:
    name: Sync upstream modules
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up github-actions name and email
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions[bot]@users.noreply.github.com"
    - name: Checkout release branch
      run: |
        git fetch --depth=1 origin mirror/modules:mirror/modules || true
        git symbolic-ref HEAD refs/heads/mirror/modules
        git reset --hard
    - name: Sync with upstream
      run: |
        rsync -av rsync://contextgarden.net/minimals/current/modules/* .
    - name: Commit and push if changes present
      run: |
        if [ -z "$(git status --porcelain)" ]; then
          echo "No changes present."
        else
          echo "Changes present."
          git add .
          git commit --allow-empty-message -m ""
          git push origin mirror/modules
        fi
  build:
    name: Build
    needs: [ sync-binaries, sync-modules ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest ]
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v17
      with:
        nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/nixpkgs-unstable.tar.gz
    - uses: cachix/cachix-action@v10
      with:
        name: context-minimals
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Build derivation with updated dependencies
      run: |
        nix flake update
        nix build
    - name: Test built derivation
      run: |
        cat <<EOF > test.tex
        \usetypescriptfile[libertinus]
        \setupbodyfont[libertinus]
        \starttext
        Hello world!
        \stoptext
        EOF
        nix run .#context -- test.tex
        [ -f test.pdf ]
  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v17
      with:
        nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/nixpkgs-unstable.tar.gz
    - uses: cachix/cachix-action@v10
      with:
        name: context-minimals
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Set up github-actions name and email
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions[bot]@users.noreply.github.com"
    - name: Update derivation version and flake lock file
      id: update
      run: |
        NEW=$(curl -s https://raw.githubusercontent.com/contextgarden/context-mirror/master/tex/context/base/mkxl/cont-new.mkxl | grep newcontextversion | grep -o '[0-9].*[0-9]')
        sed -i "s+version = .*;+version = \"$NEW\";+" flake.nix
        echo "::set-output name=version::$NEW"
        nix flake update
    - name: Commit and push if changes present
      run: |
        if [ -z "$(git status --porcelain)" ]; then
          echo "No changes present."
        else
          echo "Changes present."
          git add flake.nix flake.lock
          git commit -m "context-minimals: ${{ steps.update.outputs.version }}"
          git push origin ${GITHUB_REF##*/}
        fi
